#user  nobody;
worker_processes  4;

events {
    worker_connections  65535;
}

worker_rlimit_core 1000m;

http {
    include       mime.types;
    include       vhosts/*;
    default_type  application/octet-stream;

    client_max_body_size 50m;
    tfs_upstream tfs_ns {
        server 10.0.0.6:18101;
        type ns;
    }
    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;
        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';
        #
        #
  server {
        listen       80;
        server_name  img.moscoper.test 10.0.0.13 default;
        #server_name  10.0.0.13 default;

        tfs_keepalive max_cached=100 bucket_count=10;

	#tfs原文件
       location / {
                    tfs_pass tfs://tfs_ns/;
        }

      #设置原图和缩略图目录
      location ^~  /reduce_img/ {
		add_header content-type "image/png";
                alias /usr/local/nginx/tfsimg/; 
	}
 #所有缩略文件匹配location
 #location ~* ^(.+\.(jpg|jpeg|gif|png))_(\d+)x(\d+)\$ {
 location  ~* tfs\/(.+)_([0-9]+)x([0-9]+)$ {
                root /usr/local/nginx/tfsimg/; #设置原图和缩略图目录
		#$1为tfs key $2宽度 $3高度 如果没有该缩略件件则先下载tfs原文件 再运行lua脚本 生产缩略文件
		set $request_filepath $1;    # 设置原始图片tfs key，如：T19RETByJT1RCvBVdK
		set $width $2;
		set $height $3;
		set $reduce_filename "${request_filepath}_${width}x${height}";
#		echo $uri;
#		echo "request_filepath is $1";
#		echo "reduce_filename is $reduce_filename";
#		echo "width is $2";
#		echo "height is $3"; 
##		#set $ext $5;    # 图片文件格式后缀
		#如果文件存在直接重定向过去
		if (-f $request_filepath){
			rewrite ^(.*)$ /reduce_img/$1 last;
		}
###			 # 如果文件不存在时才需要裁剪
                if (!-f $reduce_filename) {
                        lua_code_cache off; # 在编写外部 Lua 脚本时，设置为 off Nginx 不会缓存 Lua，方便调试
                        content_by_lua_file /usr/local/nginx/html/img.lua;    # 加载外部 Lua 文件
                }
	}
        #error_page  404              /404.html;

#	location ~ ^/moscoper/.+\.php.*$ {
#	#root /usr/local/nginx/html/moscoper_net;
#	#alias /usr/local/nginx/html/moscoper_net/;
#	fastcgi_pass  127.0.0.1:9000;
#	fastcgi_index  index.php;
#	fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
#	include  fastcgi_params;
#	}
      location /moscoper/ {
	     	#proxy_set_header Host net.moscoper.test;  
     		#proxy_set_header X-Real-IP $remote_addr;	
		#proxy_pass http://net.moscoper.test/;
		index index.html index.php;
		alias /usr/local/nginx/html/moscoper_net/;
		location ~ \.php$ {
			fastcgi_split_path_info ^(.+?\.php)(/.*)?$;
			fastcgi_pass 127.0.0.1:9000;
			fastcgi_index index.php;
			fastcgi_param  SCRIPT_FILENAME  $request_filename;
			include fastcgi_params;
		}
	}
#	location ~ ^/moscoper_net/.+\.php.*$ {
#	#root /usr/local/nginx/html/moscoper;
#	#alias /usr/local/nginx/html/moscoper/;
#	fastcgi_pass  127.0.0.1:9000;
#	fastcgi_index  index.php;
#	fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
#	include  fastcgi_params;
#	}
      location /moscoper_net/ {
	     	#proxy_set_header Host www.moscoper.test;  
     		#proxy_set_header X-Real-IP $remote_addr;	
		#proxy_pass http://www.moscoper.test/;
		index index.html index.php;
		alias /usr/local/nginx/html/moscoper/;
		location ~ \.php$ {
			fastcgi_split_path_info ^(.+?\.php)(/.*)?$;
			fastcgi_pass 127.0.0.1:9000;
			fastcgi_index index.php;
			fastcgi_param  SCRIPT_FILENAME  $request_filename;
			include fastcgi_params;
		}
	}
      location ~* ^/company/ {
		rewrite ^/company/(.*)$ http://company.moscoper.test/$1 permanent;
	}
      location  /company_new/ {
		proxy_pass http://company.moscoper.test/;
	}

#
#      location /company/ {
#      #proxy_set_header Host www.moscoper.test;  
#     		#proxy_set_header X-Real-IP $remote_addr;	
#		#proxy_pass http://www.moscoper.test/;
#		index index.html index.php;
#		#alias /usr/local/nginx/html/company/;
#		root /usr/local/nginx/html;
#		#try_files  $uri  /index.php$uri;  
#		if (-e $request_filename) {
#                       break;
#               	}
#               if (!-e $request_filename) {
#                       rewrite ^/(.*)$ /company/index.php/$1 last;
#                       break;
#               	}
#
#
#		location ~ \.php($|/) {
#			root /usr/local/nginx/html/company;
#			fastcgi_split_path_info ^(.+?\.php)(/.*)?$;
#			fastcgi_pass 127.0.0.1:9000;
#			fastcgi_index index.php;
#			fastcgi_param  SCRIPT_FILENAME  $request_filename;
##	fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
#			#fastcgi_split_path_info  ^(.+\.php)(/.*)$;  
#        		#fastcgi_param  PATH_INFO $fastcgi_path_info;  
#			include fastcgi_params;
#		}
#	}
#      location /company_new/ {
#		index index.html index.php;
#		alias /usr/local/nginx/html/company/;
#		if (-e $request_filename) {
#                       break;
#               	}
#               if (!-e $request_filename) {
#                       rewrite ^/(.*)$ /company_new/index.php/$1 last;
#                       break;
#               	}
#
#
#		location ~ ^/company_new/(.*\.php($|/)) {
#			alias /usr/local/nginx/html/company/$1;
#			fastcgi_pass 127.0.0.1:9000;
#			fastcgi_index index.php;
#			fastcgi_split_path_info ^(.+?\.php)(/.*)?$;
#			fastcgi_param  SCRIPT_FILENAME  $request_filename;
#			#fastcgi_split_path_info  ^(.+\.php)(/.*)$;  
#        		#fastcgi_param  PATH_INFO $fastcgi_path_info;  
#			include fastcgi_params;
#		}
#	}
#        #location ~ \.php$ {
        #    #root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
        #    include        fastcgi_params;
        #}
        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

   }
}
